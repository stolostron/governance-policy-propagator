language: go

go:
  - "1.14.x"

services:
  - docker

branches:
  only:
    - master
    - /^release-[0-9]+\..*$/

addons:
  sonarcloud:
    organization: "open-cluster-management"
    token:
      secure: "K250+UzOwGpN62MBLQGs5de3IrT1lpsUlQDOBeKRU4JKW0kZtFnq/2eWydiKGpqoOIpUO4xUdWLdWpl48Tmd600Fs2SQ8/I9XYhCSl5YAW87ZV1skIzA2vTIRaS3uKnDi7CMGlrfk5ac3M8FgAyhSl2FcMSNOgKQ/KGeA97yBqmyMRfH52/yLMH9BZJltzLHVvDG8GOJe8vIdKjXpYBQDNuhW/RcyK0DM8ZHVxbhwj4pZyZM1gyxAHGM38GUEaonuCsYk7w1UeUYui86hCnKFCxj7+J/pR3xgCTR5oNHv0zyuwpnHUTIrThmj7gd1pLMnmb5+OSoZVZQo/TGG705dXwRmP/0MO8wAqm2RGYFLzfiTmNJ5PrOMcYlYnC/sdDFuE2iao9Ih3K4b832yiS1eN6eBH+jVas89Cj+YSVrOSd8fEF7QZIXlU/Rt+uLuNEgRsa9iCXmSQOqdudpR1qglmEBbXXSj3bGnKLI0BmQkKfiUQRLCgjdxZtyflmqVBItjBzi+EvcyNYblOWI2DbWPqsTUywzDCugRsNNXqPHxS8O8yZVT4dgWe573s3bZ+MqIxIZlbWomEyq0ccw0GOUh31LQ1v29RML+Oh1g3IhkrMW4OzjfMFJITOpShvrA6dCvNSIavxUjnL+KvvoyDTflCBl/iKeKCyv14X2l+Arzxc="

env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"
    # Component Specific
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/build/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/build/build.sh
    - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-unit-tests.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/build/run-e2e-tests.sh

stages:
  # - lint
  - build
  - unit-test
  - test-e2e
  - publish

jobs:
  include:
    # - stage: lint
    #   name: "Run code lint"
    #   if: type = pull_request
    #   script: bash ${TRAVIS_BUILD_DIR}/build/run-code-lint.sh
    - stage: build
      name: "Build the image and push it"
      script:
        - set -e
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - make copyright-check TRAVIS_BRANCH=${TRAVIS_BRANCH}
        - |
          make
          make component/build
          make component/push
          if [ "$IMAGE_SCAN" != "false" ]; then make security/scans; fi;
        - if [ "$TRAVIS_PULL_REQUEST" == "false" -a "$TRAVIS_BRANCH" == "master" ]; then 
            export COMPONENT_NEWTAG="latest-2.2";
            make component/tag;
            export COMPONENT_VERSION="latest";
            export COMPONENT_TAG_EXTENSION="-2.2";
            make component/push;
          fi;
    - stage: unit-test
      name: "Run unit test"
      script:
        - set -e
        # Set the image tag differently for PRs
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        # Bootstrap the build harness, pull test image, and run unit tests.
        - |
          make
          make component/test/unit
          set +e
          make stop-instrumented
          set -e
          make go/gosec-install
          gosec -fmt sonarqube -out gosec.json -no-fail ./...
          make sonar/js
    - stage: test-e2e
      name: "Deploy the image to a cluster and run e2e tests"
      if: type = pull_request
      script:
        - set -e
        #Check out a clusterpool, set up oc, deploy, run e2e tests, and return clusterpool cluster
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - |
          make
          make component/pull
          make component/test/e2e
    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - |
          make
          make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
